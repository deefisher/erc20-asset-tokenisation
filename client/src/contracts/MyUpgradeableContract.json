{
  "contractName": "MyUpgradeableContract",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "value",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MyUpgradeableContract.sol\":\"MyUpgradeableContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1337},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dd39ae44599da9e6b59035de3cddcfaa8d7b2a45f1c887adf5a1e38315cf6cd\",\"dweb:/ipfs/QmcFVkc7m3MzxoiCWCb2yZuezqW7eQTEvnScNALXhdsyJu\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe9fa1beb63e4a09637701f783982ba80380d630d600c9cafe26b68bf58be1b2\",\"dweb:/ipfs/QmRA3GXhTWys88joD9x8xYhdjzvGwmDGLMMzGw3LxbSEge\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xf449ca0a763d4b1b4462cf8706857074492f324020a2b9d099181b5383055ad3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5ec4671e17a3a805bc75e989180616001f5fad2043da849e9e8c1dae2805ed3\",\"dweb:/ipfs/QmeVryqLgUYRDJhFgv957unYkEg8pqNENsUZnmvm176Fno\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x062b5a0f7cc6b0528fa350033759f3a15ba42afb57423d7c593753860f2c82e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3c8b4ec819fc9648ef5ae6b8edc474b2a631389fa73add4c4545e1918abe034\",\"dweb:/ipfs/Qmc8GzvTtCxR3mg3QuLRzycSMfsSjjZPyPALmLBjMxSGv6\"]},\"project:/contracts/MyUpgradeableContract.sol\":{\"keccak256\":\"0xe9d5703668d3993cdfafd85de9cb68b6b1f1984f4af33f60882bef40b4fd427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eebfe7598c49fa847dfaa32a3672b3930b97448c36d2e9dc1b9641a6795f131\",\"dweb:/ipfs/QmQYWpgCdq6Z5EhGnjJqsD25aAXFKcawwANuRp8igATcAH\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506105c1806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e8578063c4d66de8146100f9578063f2fde38b1461010c578063fc0c546a1461011f5761007d565b806310fe9ae8146100825780633fa4f245146100a7578063715018a6146100de575b600080fd5b61008a610132565b6040516001600160a01b0390911681526020015b60405180910390f35b6065546100cc9074010000000000000000000000000000000000000000900460ff1681565b60405160ff909116815260200161009e565b6100e66101a4565b005b6033546001600160a01b031661008a565b6100e6610107366004610553565b61020a565b6100e661011a366004610553565b61033f565b60655461008a906001600160a01b031681565b6033546000906001600160a01b031633146101945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b506065546001600160a01b031690565b6033546001600160a01b031633146101fe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161018b565b6102086000610421565b565b600054610100900460ff1680610223575060005460ff16155b6102955760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161018b565b600054610100900460ff161580156102c0576000805460ff1961ff0019909116610100171660011790555b6102c8610480565b6065805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416177fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16742a0000000000000000000000000000000000000000179055801561033b576000805461ff00191690555b5050565b6033546001600160a01b031633146103995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161018b565b6001600160a01b0381166104155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161018b565b61041e81610421565b50565b603380546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610499575060005460ff16155b61050b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161018b565b600054610100900460ff16158015610536576000805460ff1961ff0019909116610100171660011790555b61053f33610421565b801561041e576000805461ff001916905550565b600060208284031215610564578081fd5b813561056f81610576565b9392505050565b6001600160a01b038116811461041e57600080fdfea264697066735822122042587eb1ea1f98919af10f860f6aff50c41fb0babe81b695e8e59d3c5d18218764736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e8578063c4d66de8146100f9578063f2fde38b1461010c578063fc0c546a1461011f5761007d565b806310fe9ae8146100825780633fa4f245146100a7578063715018a6146100de575b600080fd5b61008a610132565b6040516001600160a01b0390911681526020015b60405180910390f35b6065546100cc9074010000000000000000000000000000000000000000900460ff1681565b60405160ff909116815260200161009e565b6100e66101a4565b005b6033546001600160a01b031661008a565b6100e6610107366004610553565b61020a565b6100e661011a366004610553565b61033f565b60655461008a906001600160a01b031681565b6033546000906001600160a01b031633146101945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b506065546001600160a01b031690565b6033546001600160a01b031633146101fe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161018b565b6102086000610421565b565b600054610100900460ff1680610223575060005460ff16155b6102955760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161018b565b600054610100900460ff161580156102c0576000805460ff1961ff0019909116610100171660011790555b6102c8610480565b6065805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416177fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16742a0000000000000000000000000000000000000000179055801561033b576000805461ff00191690555b5050565b6033546001600160a01b031633146103995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161018b565b6001600160a01b0381166104155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161018b565b61041e81610421565b50565b603380546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610499575060005460ff16155b61050b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161018b565b600054610100900460ff16158015610536576000805460ff1961ff0019909116610100171660011790555b61053f33610421565b801561041e576000805461ff001916905550565b600060208284031215610564578081fd5b813561056f81610576565b9392505050565b6001600160a01b038116811461041e57600080fdfea264697066735822122042587eb1ea1f98919af10f860f6aff50c41fb0babe81b695e8e59d3c5d18218764736f6c63430008020033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2578:52",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:52",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:187:52",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:52"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:52"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:52"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:52"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:52"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:52"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:52"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:52"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:52"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:52",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "235:5:52"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:24:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:31:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:31:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "250:15:52",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "260:5:52"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "250:6:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:52",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:52",
                "type": ""
              }
            ],
            "src": "14:257:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "371:187:52",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "417:26:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "426:6:52"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "434:6:52"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "419:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "419:22:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "419:22:52"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "392:7:52"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "401:9:52"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "388:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "388:23:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "413:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "384:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "384:32:52"
                  },
                  "nodeType": "YulIf",
                  "src": "381:2:52"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "452:36:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "478:9:52"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "465:12:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "465:23:52"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "456:5:52",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "522:5:52"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "497:24:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:31:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "497:31:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "537:15:52",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "547:5:52"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "537:6:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20Upgradeable_$821",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "337:9:52",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "348:7:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "360:6:52",
                "type": ""
              }
            ],
            "src": "276:282:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "664:125:52",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "674:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "686:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "697:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "682:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "682:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "674:4:52"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "716:9:52"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "731:6:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "739:42:52",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "727:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "727:55:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "709:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "709:74:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "709:74:52"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "633:9:52",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "644:6:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "655:4:52",
                "type": ""
              }
            ],
            "src": "563:226:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "920:125:52",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "930:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "942:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "953:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "938:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "938:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "930:4:52"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "972:9:52"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "987:6:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "995:42:52",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "983:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "983:55:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "965:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "965:74:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "965:74:52"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$821__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "889:9:52",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "911:4:52",
                "type": ""
              }
            ],
            "src": "794:251:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1224:228:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1241:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1252:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1234:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1234:21:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1234:21:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1275:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1286:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1271:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1271:18:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1291:2:52",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1264:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1264:30:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1264:30:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1314:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1325:2:52",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1310:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1310:18:52"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1330:34:52",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1303:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1303:62:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1303:62:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1385:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1396:2:52",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1381:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1381:18:52"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1401:8:52",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1374:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1374:36:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1374:36:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1419:27:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1431:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1442:3:52",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1427:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1427:19:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1419:4:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1201:9:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1215:4:52",
                "type": ""
              }
            ],
            "src": "1050:402:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1631:236:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1648:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1659:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1641:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1641:21:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1641:21:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1682:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1693:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1678:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1678:18:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1698:2:52",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1671:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1671:30:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1671:30:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1721:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1732:2:52",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1717:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1717:18:52"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1737:34:52",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1710:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1710:62:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1710:62:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1792:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1803:2:52",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1788:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1788:18:52"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1808:16:52",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1781:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1781:44:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1781:44:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1834:27:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1846:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1857:3:52",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1842:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1842:19:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1834:4:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1608:9:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1622:4:52",
                "type": ""
              }
            ],
            "src": "1457:410:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2046:182:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2063:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2074:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2056:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2056:21:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2056:21:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2097:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2108:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2093:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2093:18:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2113:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2086:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2086:30:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2086:30:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2136:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2147:2:52",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2132:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2132:18:52"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2152:34:52",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2125:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2125:62:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2125:62:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2196:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2208:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2219:2:52",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2204:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2204:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2196:4:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2023:9:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2037:4:52",
                "type": ""
              }
            ],
            "src": "1872:356:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2330:87:52",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2340:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2352:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2363:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2348:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2348:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2340:4:52"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2382:9:52"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2397:6:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2405:4:52",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2393:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2393:17:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2375:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2375:36:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2375:36:52"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2299:9:52",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2310:6:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2321:4:52",
                "type": ""
              }
            ],
            "src": "2233:184:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2467:109:52",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2554:16:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2563:1:52",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2566:1:52",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2556:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2556:12:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2556:12:52"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2490:5:52"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2501:5:52"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2508:42:52",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2497:3:52"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2497:54:52"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2487:2:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2487:65:52"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2480:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2480:73:52"
                  },
                  "nodeType": "YulIf",
                  "src": "2477:2:52"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2456:5:52",
                "type": ""
              }
            ],
            "src": "2422:154:52"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20Upgradeable_$821(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$821__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 52,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "297:413:48:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "297:413:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;600:107;;;:::i;:::-;;;-1:-1:-1;;;;;727:55:52;;;709:74;;697:2;682:18;600:107:48;;;;;;;;409:18;;;;;;;;;;;;;;;2405:4:52;2393:17;;;2375:36;;2363:2;2348:18;409::48;2330:87:52;1871:92:0;;;:::i;:::-;;1239:85;1311:6;;-1:-1:-1;;;;;1311:6:0;1239:85;;436:156:48;;;;;;:::i;:::-;;:::i;2112:189:0:-;;;;;;:::i;:::-;;:::i;372:30:48:-;;;;;-1:-1:-1;;;;;372:30:48;;;600:107;1311:6:0;;658:7:48;;-1:-1:-1;;;;;1311:6:0;902:10:5;1451:23:0;1443:68;;;;-1:-1:-1;;;1443:68:0;;2074:2:52;1443:68:0;;;2056:21:52;;;2093:18;;;2086:30;2152:34;2132:18;;;2125:62;2204:18;;1443:68:0;;;;;;;;;-1:-1:-1;693:5:48::1;::::0;-1:-1:-1;;;;;693:5:48::1;600:107:::0;:::o;1871:92:0:-;1311:6;;-1:-1:-1;;;;;1311:6:0;902:10:5;1451:23:0;1443:68;;;;-1:-1:-1;;;1443:68:0;;2074:2:52;1443:68:0;;;2056:21:52;;;2093:18;;;2086:30;2152:34;2132:18;;;2125:62;2204:18;;1443:68:0;2046:182:52;1443:68:0;1935:21:::1;1953:1;1935:9;:21::i;:::-;1871:92::o:0;436:156:48:-;1409:13:1;;;;;;;;:30;;-1:-1:-1;1427:12:1;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:1;;1659:2:52;1401:89:1;;;1641:21:52;1698:2;1678:18;;;1671:30;1737:34;1717:18;;;1710:62;1808:16;1788:18;;;1781:44;1842:19;;1401:89:1;1631:236:52;1401:89:1;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;;;1581:20:1;;;;;1615:19;1597:4;1615:19;;;1547:98;512:26:48::1;:24;:26::i;:::-;549:5;:14:::0;;-1:-1:-1;;549:14:48::1;-1:-1:-1::0;;;;;549:14:48;::::1;;574:10:::0;::::1;::::0;::::1;::::0;;1667:66:1;;;;1717:5;1701:21;;-1:-1:-1;;1701:21:1;;;1667:66;436:156:48;;:::o;2112:189:0:-;1311:6;;-1:-1:-1;;;;;1311:6:0;902:10:5;1451:23:0;1443:68;;;;-1:-1:-1;;;1443:68:0;;2074:2:52;1443:68:0;;;2056:21:52;;;2093:18;;;2086:30;2152:34;2132:18;;;2125:62;2204:18;;1443:68:0;2046:182:52;1443:68:0;-1:-1:-1;;;;;2200:22:0;::::1;2192:73;;;::::0;-1:-1:-1;;;2192:73:0;;1252:2:52;2192:73:0::1;::::0;::::1;1234:21:52::0;1291:2;1271:18;;;1264:30;1330:34;1310:18;;;1303:62;1401:8;1381:18;;;1374:36;1427:19;;2192:73:0::1;1224:228:52::0;2192:73:0::1;2275:19;2285:8;2275:9;:19::i;:::-;2112:189:::0;:::o;2307:169::-;2381:6;;;-1:-1:-1;;;;;2397:17:0;;;-1:-1:-1;;2397:17:0;;;;;;;2429:40;;2381:6;;;2397:17;2381:6;;2429:40;;2362:16;;2429:40;2307:169;;:::o;1066:97::-;1409:13:1;;;;;;;;:30;;-1:-1:-1;1427:12:1;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:1;;1659:2:52;1401:89:1;;;1641:21:52;1698:2;1678:18;;;1671:30;1737:34;1717:18;;;1710:62;1808:16;1788:18;;;1781:44;1842:19;;1401:89:1;1631:236:52;1401:89:1;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;;;1581:20:1;;;;;1615:19;1597:4;1615:19;;;1547:98;1133:23:0::1;902:10:5::0;1133:9:0::1;:23::i;:::-;1671:14:1::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:1;;;1066:97:0;:::o;14:257:52:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;:::-;260:5;84:187;-1:-1:-1;;;84:187:52:o;2422:154::-;-1:-1:-1;;;;;2501:5:52;2497:54;2490:5;2487:65;2477:2;;2566:1;2563;2556:12",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.2;\r\n\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\n\r\ncontract MyUpgradeableContract is Initializable, OwnableUpgradeable {\r\n    IERC20Upgradeable public token;\r\n    uint8 public value;\r\n\r\n    function initialize(IERC20Upgradeable _token) public initializer {\r\n        __Ownable_init_unchained();\r\n        token = _token;\r\n        value = 42;\r\n    }\r\n\r\n    function getTokenAddress() public view onlyOwner returns (address) {\r\n        return address(token);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Owner\\Dropbox\\general\\dev\\web\\projects\\100 - blockchain\\Second blockchain project\\s06-tokenisation\\contracts\\MyUpgradeableContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/MyUpgradeableContract.sol",
    "exportedSymbols": {
      "ContextUpgradeable": [
        890
      ],
      "IERC20Upgradeable": [
        821
      ],
      "Initializable": [
        170
      ],
      "MyUpgradeableContract": [
        10021
      ],
      "OwnableUpgradeable": [
        124
      ]
    },
    "id": 10022,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9975,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:48"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "id": 9976,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10022,
        "sourceUnit": 171,
        "src": "60:75:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "id": 9977,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10022,
        "sourceUnit": 822,
        "src": "137:79:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 9978,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10022,
        "sourceUnit": 125,
        "src": "218:75:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9979,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 170,
              "src": "331:13:48"
            },
            "id": 9980,
            "nodeType": "InheritanceSpecifier",
            "src": "331:13:48"
          },
          {
            "baseName": {
              "id": 9981,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 124,
              "src": "346:18:48"
            },
            "id": 9982,
            "nodeType": "InheritanceSpecifier",
            "src": "346:18:48"
          }
        ],
        "contractDependencies": [
          124,
          170,
          890
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10021,
        "linearizedBaseContracts": [
          10021,
          124,
          890,
          170
        ],
        "name": "MyUpgradeableContract",
        "nameLocation": "306:21:48",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 9985,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "397:5:48",
            "nodeType": "VariableDeclaration",
            "scope": 10021,
            "src": "372:30:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
              "typeString": "contract IERC20Upgradeable"
            },
            "typeName": {
              "id": 9984,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9983,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 821,
                "src": "372:17:48"
              },
              "referencedDeclaration": 821,
              "src": "372:17:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
                "typeString": "contract IERC20Upgradeable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3fa4f245",
            "id": 9987,
            "mutability": "mutable",
            "name": "value",
            "nameLocation": "422:5:48",
            "nodeType": "VariableDeclaration",
            "scope": 10021,
            "src": "409:18:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 9986,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "409:5:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10006,
              "nodeType": "Block",
              "src": "501:91:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9995,
                      "name": "__Ownable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "512:24:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "512:26:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9997,
                  "nodeType": "ExpressionStatement",
                  "src": "512:26:48"
                },
                {
                  "expression": {
                    "id": 10000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9998,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9985,
                      "src": "549:5:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
                        "typeString": "contract IERC20Upgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9999,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9990,
                      "src": "557:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
                        "typeString": "contract IERC20Upgradeable"
                      }
                    },
                    "src": "549:14:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "id": 10001,
                  "nodeType": "ExpressionStatement",
                  "src": "549:14:48"
                },
                {
                  "expression": {
                    "id": 10004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10002,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9987,
                      "src": "574:5:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3432",
                      "id": 10003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "582:2:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_42_by_1",
                        "typeString": "int_const 42"
                      },
                      "value": "42"
                    },
                    "src": "574:10:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 10005,
                  "nodeType": "ExpressionStatement",
                  "src": "574:10:48"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "id": 10007,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9993,
                "modifierName": {
                  "id": 9992,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 169,
                  "src": "489:11:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "489:11:48"
              }
            ],
            "name": "initialize",
            "nameLocation": "445:10:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9990,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "474:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10007,
                  "src": "456:24:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
                    "typeString": "contract IERC20Upgradeable"
                  },
                  "typeName": {
                    "id": 9989,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9988,
                      "name": "IERC20Upgradeable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 821,
                      "src": "456:17:48"
                    },
                    "referencedDeclaration": 821,
                    "src": "456:17:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "455:26:48"
            },
            "returnParameters": {
              "id": 9994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "501:0:48"
            },
            "scope": 10021,
            "src": "436:156:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10019,
              "nodeType": "Block",
              "src": "667:40:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10016,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9985,
                        "src": "693:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      ],
                      "id": 10015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "685:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 10014,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "685:7:48",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 10017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "685:14:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 10013,
                  "id": 10018,
                  "nodeType": "Return",
                  "src": "678:21:48"
                }
              ]
            },
            "functionSelector": "10fe9ae8",
            "id": 10020,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10010,
                "modifierName": {
                  "id": 10009,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63,
                  "src": "639:9:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "639:9:48"
              }
            ],
            "name": "getTokenAddress",
            "nameLocation": "609:15:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "624:2:48"
            },
            "returnParameters": {
              "id": 10013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10012,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10020,
                  "src": "658:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "658:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "657:9:48"
            },
            "scope": 10021,
            "src": "600:107:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10022,
        "src": "297:413:48"
      }
    ],
    "src": "33:679:48"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/MyUpgradeableContract.sol",
    "exportedSymbols": {
      "ContextUpgradeable": [
        890
      ],
      "IERC20Upgradeable": [
        821
      ],
      "Initializable": [
        170
      ],
      "MyUpgradeableContract": [
        10021
      ],
      "OwnableUpgradeable": [
        124
      ]
    },
    "id": 10022,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9975,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:48"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "id": 9976,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10022,
        "sourceUnit": 171,
        "src": "60:75:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "id": 9977,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10022,
        "sourceUnit": 822,
        "src": "137:79:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 9978,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10022,
        "sourceUnit": 125,
        "src": "218:75:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9979,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 170,
              "src": "331:13:48"
            },
            "id": 9980,
            "nodeType": "InheritanceSpecifier",
            "src": "331:13:48"
          },
          {
            "baseName": {
              "id": 9981,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 124,
              "src": "346:18:48"
            },
            "id": 9982,
            "nodeType": "InheritanceSpecifier",
            "src": "346:18:48"
          }
        ],
        "contractDependencies": [
          124,
          170,
          890
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10021,
        "linearizedBaseContracts": [
          10021,
          124,
          890,
          170
        ],
        "name": "MyUpgradeableContract",
        "nameLocation": "306:21:48",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 9985,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "397:5:48",
            "nodeType": "VariableDeclaration",
            "scope": 10021,
            "src": "372:30:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
              "typeString": "contract IERC20Upgradeable"
            },
            "typeName": {
              "id": 9984,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9983,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 821,
                "src": "372:17:48"
              },
              "referencedDeclaration": 821,
              "src": "372:17:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
                "typeString": "contract IERC20Upgradeable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3fa4f245",
            "id": 9987,
            "mutability": "mutable",
            "name": "value",
            "nameLocation": "422:5:48",
            "nodeType": "VariableDeclaration",
            "scope": 10021,
            "src": "409:18:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 9986,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "409:5:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10006,
              "nodeType": "Block",
              "src": "501:91:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9995,
                      "name": "__Ownable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "512:24:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "512:26:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9997,
                  "nodeType": "ExpressionStatement",
                  "src": "512:26:48"
                },
                {
                  "expression": {
                    "id": 10000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9998,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9985,
                      "src": "549:5:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
                        "typeString": "contract IERC20Upgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9999,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9990,
                      "src": "557:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
                        "typeString": "contract IERC20Upgradeable"
                      }
                    },
                    "src": "549:14:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "id": 10001,
                  "nodeType": "ExpressionStatement",
                  "src": "549:14:48"
                },
                {
                  "expression": {
                    "id": 10004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10002,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9987,
                      "src": "574:5:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3432",
                      "id": 10003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "582:2:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_42_by_1",
                        "typeString": "int_const 42"
                      },
                      "value": "42"
                    },
                    "src": "574:10:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 10005,
                  "nodeType": "ExpressionStatement",
                  "src": "574:10:48"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "id": 10007,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9993,
                "modifierName": {
                  "id": 9992,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 169,
                  "src": "489:11:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "489:11:48"
              }
            ],
            "name": "initialize",
            "nameLocation": "445:10:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9990,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "474:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10007,
                  "src": "456:24:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
                    "typeString": "contract IERC20Upgradeable"
                  },
                  "typeName": {
                    "id": 9989,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9988,
                      "name": "IERC20Upgradeable",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 821,
                      "src": "456:17:48"
                    },
                    "referencedDeclaration": 821,
                    "src": "456:17:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "455:26:48"
            },
            "returnParameters": {
              "id": 9994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "501:0:48"
            },
            "scope": 10021,
            "src": "436:156:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10019,
              "nodeType": "Block",
              "src": "667:40:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10016,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9985,
                        "src": "693:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$821",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      ],
                      "id": 10015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "685:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 10014,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "685:7:48",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 10017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "685:14:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 10013,
                  "id": 10018,
                  "nodeType": "Return",
                  "src": "678:21:48"
                }
              ]
            },
            "functionSelector": "10fe9ae8",
            "id": 10020,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10010,
                "modifierName": {
                  "id": 10009,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63,
                  "src": "639:9:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "639:9:48"
              }
            ],
            "name": "getTokenAddress",
            "nameLocation": "609:15:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "624:2:48"
            },
            "returnParameters": {
              "id": 10013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10012,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10020,
                  "src": "658:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "658:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "657:9:48"
            },
            "scope": 10021,
            "src": "600:107:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10022,
        "src": "297:413:48"
      }
    ],
    "src": "33:679:48"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-10-12T14:09:43.987Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}